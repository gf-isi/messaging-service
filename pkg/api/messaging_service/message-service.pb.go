// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: messaging_service/message-service.proto

package messaging_service

import (
	api_types "github.com/influenzanet/go-utils/pkg/api_types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceStatus_StatusValue int32

const (
	ServiceStatus_NORMAL  ServiceStatus_StatusValue = 0
	ServiceStatus_PROBLEM ServiceStatus_StatusValue = 1
)

// Enum value maps for ServiceStatus_StatusValue.
var (
	ServiceStatus_StatusValue_name = map[int32]string{
		0: "NORMAL",
		1: "PROBLEM",
	}
	ServiceStatus_StatusValue_value = map[string]int32{
		"NORMAL":  0,
		"PROBLEM": 1,
	}
)

func (x ServiceStatus_StatusValue) Enum() *ServiceStatus_StatusValue {
	p := new(ServiceStatus_StatusValue)
	*p = x
	return p
}

func (x ServiceStatus_StatusValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceStatus_StatusValue) Descriptor() protoreflect.EnumDescriptor {
	return file_messaging_service_message_service_proto_enumTypes[0].Descriptor()
}

func (ServiceStatus_StatusValue) Type() protoreflect.EnumType {
	return &file_messaging_service_message_service_proto_enumTypes[0]
}

func (x ServiceStatus_StatusValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceStatus_StatusValue.Descriptor instead.
func (ServiceStatus_StatusValue) EnumDescriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{0, 0}
}

// Status is typically used as a return value indicating if the method was
// performed normally, or the system has any internal error e.g. checking system
// status of a service
type ServiceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  ServiceStatus_StatusValue `protobuf:"varint,1,opt,name=status,proto3,enum=influenzanet.message_service.ServiceStatus_StatusValue" json:"status,omitempty"`
	Msg     string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Version string                    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ServiceStatus) Reset() {
	*x = ServiceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatus) ProtoMessage() {}

func (x *ServiceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatus.ProtoReflect.Descriptor instead.
func (*ServiceStatus) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceStatus) GetStatus() ServiceStatus_StatusValue {
	if x != nil {
		return x.Status
	}
	return ServiceStatus_NORMAL
}

func (x *ServiceStatus) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ServiceStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SendMessageToAllUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token         *api_types.TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Template      *EmailTemplate        `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	IgnoreWeekday bool                  `protobuf:"varint,3,opt,name=ignore_weekday,json=ignoreWeekday,proto3" json:"ignore_weekday,omitempty"`
	Label         string                `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"` // short description to describe intent of the message, if empty a default label is used
}

func (x *SendMessageToAllUsersReq) Reset() {
	*x = SendMessageToAllUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageToAllUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageToAllUsersReq) ProtoMessage() {}

func (x *SendMessageToAllUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageToAllUsersReq.ProtoReflect.Descriptor instead.
func (*SendMessageToAllUsersReq) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{1}
}

func (x *SendMessageToAllUsersReq) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *SendMessageToAllUsersReq) GetTemplate() *EmailTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *SendMessageToAllUsersReq) GetIgnoreWeekday() bool {
	if x != nil {
		return x.IgnoreWeekday
	}
	return false
}

func (x *SendMessageToAllUsersReq) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type SendMessageToStudyParticipantsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token         *api_types.TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Template      *EmailTemplate        `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	StudyKey      string                `protobuf:"bytes,3,opt,name=study_key,json=studyKey,proto3" json:"study_key,omitempty"`
	Condition     *ExpressionArg        `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	IgnoreWeekday bool                  `protobuf:"varint,5,opt,name=ignore_weekday,json=ignoreWeekday,proto3" json:"ignore_weekday,omitempty"`
	Label         string                `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"` // short description to describe intent of the message, if empty a default label is used
}

func (x *SendMessageToStudyParticipantsReq) Reset() {
	*x = SendMessageToStudyParticipantsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageToStudyParticipantsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageToStudyParticipantsReq) ProtoMessage() {}

func (x *SendMessageToStudyParticipantsReq) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageToStudyParticipantsReq.ProtoReflect.Descriptor instead.
func (*SendMessageToStudyParticipantsReq) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageToStudyParticipantsReq) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *SendMessageToStudyParticipantsReq) GetTemplate() *EmailTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *SendMessageToStudyParticipantsReq) GetStudyKey() string {
	if x != nil {
		return x.StudyKey
	}
	return ""
}

func (x *SendMessageToStudyParticipantsReq) GetCondition() *ExpressionArg {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *SendMessageToStudyParticipantsReq) GetIgnoreWeekday() bool {
	if x != nil {
		return x.IgnoreWeekday
	}
	return false
}

func (x *SendMessageToStudyParticipantsReq) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type SendEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId        string            `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	To                []string          `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	MessageType       string            `protobuf:"bytes,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	StudyKey          string            `protobuf:"bytes,4,opt,name=study_key,json=studyKey,proto3" json:"study_key,omitempty"`
	PreferredLanguage string            `protobuf:"bytes,5,opt,name=preferred_language,json=preferredLanguage,proto3" json:"preferred_language,omitempty"`
	ContentInfos      map[string]string `protobuf:"bytes,6,rep,name=content_infos,json=contentInfos,proto3" json:"content_infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UseLowPrio        bool              `protobuf:"varint,7,opt,name=use_low_prio,json=useLowPrio,proto3" json:"use_low_prio,omitempty"`
}

func (x *SendEmailReq) Reset() {
	*x = SendEmailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailReq) ProtoMessage() {}

func (x *SendEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailReq.ProtoReflect.Descriptor instead.
func (*SendEmailReq) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{3}
}

func (x *SendEmailReq) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *SendEmailReq) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendEmailReq) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *SendEmailReq) GetStudyKey() string {
	if x != nil {
		return x.StudyKey
	}
	return ""
}

func (x *SendEmailReq) GetPreferredLanguage() string {
	if x != nil {
		return x.PreferredLanguage
	}
	return ""
}

func (x *SendEmailReq) GetContentInfos() map[string]string {
	if x != nil {
		return x.ContentInfos
	}
	return nil
}

func (x *SendEmailReq) GetUseLowPrio() bool {
	if x != nil {
		return x.UseLowPrio
	}
	return false
}

type AutoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Template  *EmailTemplate `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	Type      string         `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // all-users - study-participants
	StudyKey  string         `protobuf:"bytes,4,opt,name=study_key,json=studyKey,proto3" json:"study_key,omitempty"`
	Condition *ExpressionArg `protobuf:"bytes,5,opt,name=condition,proto3" json:"condition,omitempty"`
	NextTime  int64          `protobuf:"varint,6,opt,name=next_time,json=nextTime,proto3" json:"next_time,omitempty"` // when is the next time the message should be triggered
	Period    int64          `protobuf:"varint,7,opt,name=period,proto3" json:"period,omitempty"`                     // how often it should be triggered
	Label     string         `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`                        // short description to describe intent of the message
}

func (x *AutoMessage) Reset() {
	*x = AutoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoMessage) ProtoMessage() {}

func (x *AutoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoMessage.ProtoReflect.Descriptor instead.
func (*AutoMessage) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{4}
}

func (x *AutoMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AutoMessage) GetTemplate() *EmailTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *AutoMessage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AutoMessage) GetStudyKey() string {
	if x != nil {
		return x.StudyKey
	}
	return ""
}

func (x *AutoMessage) GetCondition() *ExpressionArg {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *AutoMessage) GetNextTime() int64 {
	if x != nil {
		return x.NextTime
	}
	return 0
}

func (x *AutoMessage) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *AutoMessage) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type AutoMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoMessages []*AutoMessage `protobuf:"bytes,1,rep,name=auto_messages,json=autoMessages,proto3" json:"auto_messages,omitempty"`
}

func (x *AutoMessages) Reset() {
	*x = AutoMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoMessages) ProtoMessage() {}

func (x *AutoMessages) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoMessages.ProtoReflect.Descriptor instead.
func (*AutoMessages) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{5}
}

func (x *AutoMessages) GetAutoMessages() []*AutoMessage {
	if x != nil {
		return x.AutoMessages
	}
	return nil
}

type GetAutoMessagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *api_types.TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetAutoMessagesReq) Reset() {
	*x = GetAutoMessagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutoMessagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutoMessagesReq) ProtoMessage() {}

func (x *GetAutoMessagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutoMessagesReq.ProtoReflect.Descriptor instead.
func (*GetAutoMessagesReq) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetAutoMessagesReq) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

type SaveAutoMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       *api_types.TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	AutoMessage *AutoMessage          `protobuf:"bytes,2,opt,name=auto_message,json=autoMessage,proto3" json:"auto_message,omitempty"`
}

func (x *SaveAutoMessageReq) Reset() {
	*x = SaveAutoMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAutoMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAutoMessageReq) ProtoMessage() {}

func (x *SaveAutoMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAutoMessageReq.ProtoReflect.Descriptor instead.
func (*SaveAutoMessageReq) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{7}
}

func (x *SaveAutoMessageReq) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *SaveAutoMessageReq) GetAutoMessage() *AutoMessage {
	if x != nil {
		return x.AutoMessage
	}
	return nil
}

type DeleteAutoMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token         *api_types.TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	AutoMessageId string                `protobuf:"bytes,2,opt,name=auto_message_id,json=autoMessageId,proto3" json:"auto_message_id,omitempty"`
}

func (x *DeleteAutoMessageReq) Reset() {
	*x = DeleteAutoMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAutoMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAutoMessageReq) ProtoMessage() {}

func (x *DeleteAutoMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAutoMessageReq.ProtoReflect.Descriptor instead.
func (*DeleteAutoMessageReq) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAutoMessageReq) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *DeleteAutoMessageReq) GetAutoMessageId() string {
	if x != nil {
		return x.AutoMessageId
	}
	return ""
}

type EmailTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MessageType     string               `protobuf:"bytes,2,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	StudyKey        string               `protobuf:"bytes,3,opt,name=study_key,json=studyKey,proto3" json:"study_key,omitempty"`
	DefaultLanguage string               `protobuf:"bytes,4,opt,name=default_language,json=defaultLanguage,proto3" json:"default_language,omitempty"`
	Translations    []*LocalizedTemplate `protobuf:"bytes,5,rep,name=translations,proto3" json:"translations,omitempty"`
	HeaderOverrides *HeaderOverrides     `protobuf:"bytes,6,opt,name=header_overrides,json=headerOverrides,proto3" json:"header_overrides,omitempty"`
}

func (x *EmailTemplate) Reset() {
	*x = EmailTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTemplate) ProtoMessage() {}

func (x *EmailTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTemplate.ProtoReflect.Descriptor instead.
func (*EmailTemplate) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{9}
}

func (x *EmailTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmailTemplate) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *EmailTemplate) GetStudyKey() string {
	if x != nil {
		return x.StudyKey
	}
	return ""
}

func (x *EmailTemplate) GetDefaultLanguage() string {
	if x != nil {
		return x.DefaultLanguage
	}
	return ""
}

func (x *EmailTemplate) GetTranslations() []*LocalizedTemplate {
	if x != nil {
		return x.Translations
	}
	return nil
}

func (x *EmailTemplate) GetHeaderOverrides() *HeaderOverrides {
	if x != nil {
		return x.HeaderOverrides
	}
	return nil
}

type HeaderOverrides struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Sender    string   `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	ReplyTo   []string `protobuf:"bytes,3,rep,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`
	NoReplyTo bool     `protobuf:"varint,4,opt,name=no_reply_to,json=noReplyTo,proto3" json:"no_reply_to,omitempty"`
}

func (x *HeaderOverrides) Reset() {
	*x = HeaderOverrides{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeaderOverrides) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderOverrides) ProtoMessage() {}

func (x *HeaderOverrides) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderOverrides.ProtoReflect.Descriptor instead.
func (*HeaderOverrides) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{10}
}

func (x *HeaderOverrides) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *HeaderOverrides) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *HeaderOverrides) GetReplyTo() []string {
	if x != nil {
		return x.ReplyTo
	}
	return nil
}

func (x *HeaderOverrides) GetNoReplyTo() bool {
	if x != nil {
		return x.NoReplyTo
	}
	return false
}

type LocalizedTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang        string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	TemplateDef string `protobuf:"bytes,2,opt,name=template_def,json=templateDef,proto3" json:"template_def,omitempty"`
	Subject     string `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *LocalizedTemplate) Reset() {
	*x = LocalizedTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalizedTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalizedTemplate) ProtoMessage() {}

func (x *LocalizedTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalizedTemplate.ProtoReflect.Descriptor instead.
func (*LocalizedTemplate) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{11}
}

func (x *LocalizedTemplate) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LocalizedTemplate) GetTemplateDef() string {
	if x != nil {
		return x.TemplateDef
	}
	return ""
}

func (x *LocalizedTemplate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type EmailTemplates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Templates []*EmailTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
}

func (x *EmailTemplates) Reset() {
	*x = EmailTemplates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTemplates) ProtoMessage() {}

func (x *EmailTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTemplates.ProtoReflect.Descriptor instead.
func (*EmailTemplates) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{12}
}

func (x *EmailTemplates) GetTemplates() []*EmailTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

type GetEmailTemplatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *api_types.TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetEmailTemplatesReq) Reset() {
	*x = GetEmailTemplatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmailTemplatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailTemplatesReq) ProtoMessage() {}

func (x *GetEmailTemplatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailTemplatesReq.ProtoReflect.Descriptor instead.
func (*GetEmailTemplatesReq) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetEmailTemplatesReq) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

type SaveEmailTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    *api_types.TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Template *EmailTemplate        `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *SaveEmailTemplateReq) Reset() {
	*x = SaveEmailTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveEmailTemplateReq) ProtoMessage() {}

func (x *SaveEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*SaveEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{14}
}

func (x *SaveEmailTemplateReq) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *SaveEmailTemplateReq) GetTemplate() *EmailTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type DeleteEmailTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       *api_types.TokenInfos `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	StudyKey    string                `protobuf:"bytes,2,opt,name=study_key,json=studyKey,proto3" json:"study_key,omitempty"`
	MessageType string                `protobuf:"bytes,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
}

func (x *DeleteEmailTemplateReq) Reset() {
	*x = DeleteEmailTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmailTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmailTemplateReq) ProtoMessage() {}

func (x *DeleteEmailTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmailTemplateReq.ProtoReflect.Descriptor instead.
func (*DeleteEmailTemplateReq) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteEmailTemplateReq) GetToken() *api_types.TokenInfos {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *DeleteEmailTemplateReq) GetStudyKey() string {
	if x != nil {
		return x.StudyKey
	}
	return ""
}

func (x *DeleteEmailTemplateReq) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

type Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ReturnType string           `protobuf:"bytes,2,opt,name=returnType,proto3" json:"returnType,omitempty"`
	Data       []*ExpressionArg `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Expression) Reset() {
	*x = Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{16}
}

func (x *Expression) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Expression) GetReturnType() string {
	if x != nil {
		return x.ReturnType
	}
	return ""
}

func (x *Expression) GetData() []*ExpressionArg {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExpressionArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dtype string `protobuf:"bytes,1,opt,name=dtype,proto3" json:"dtype,omitempty"`
	// Types that are assignable to Data:
	//
	//	*ExpressionArg_Exp
	//	*ExpressionArg_Str
	//	*ExpressionArg_Num
	Data isExpressionArg_Data `protobuf_oneof:"data"`
}

func (x *ExpressionArg) Reset() {
	*x = ExpressionArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messaging_service_message_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressionArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressionArg) ProtoMessage() {}

func (x *ExpressionArg) ProtoReflect() protoreflect.Message {
	mi := &file_messaging_service_message_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressionArg.ProtoReflect.Descriptor instead.
func (*ExpressionArg) Descriptor() ([]byte, []int) {
	return file_messaging_service_message_service_proto_rawDescGZIP(), []int{17}
}

func (x *ExpressionArg) GetDtype() string {
	if x != nil {
		return x.Dtype
	}
	return ""
}

func (m *ExpressionArg) GetData() isExpressionArg_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ExpressionArg) GetExp() *Expression {
	if x, ok := x.GetData().(*ExpressionArg_Exp); ok {
		return x.Exp
	}
	return nil
}

func (x *ExpressionArg) GetStr() string {
	if x, ok := x.GetData().(*ExpressionArg_Str); ok {
		return x.Str
	}
	return ""
}

func (x *ExpressionArg) GetNum() float64 {
	if x, ok := x.GetData().(*ExpressionArg_Num); ok {
		return x.Num
	}
	return 0
}

type isExpressionArg_Data interface {
	isExpressionArg_Data()
}

type ExpressionArg_Exp struct {
	Exp *Expression `protobuf:"bytes,2,opt,name=exp,proto3,oneof"`
}

type ExpressionArg_Str struct {
	Str string `protobuf:"bytes,3,opt,name=str,proto3,oneof"`
}

type ExpressionArg_Num struct {
	Num float64 `protobuf:"fixed64,4,opt,name=num,proto3,oneof"`
}

func (*ExpressionArg_Exp) isExpressionArg_Data() {}

func (*ExpressionArg_Str) isExpressionArg_Data() {}

func (*ExpressionArg_Num) isExpressionArg_Data() {}

var File_messaging_service_message_service_proto protoreflect.FileDescriptor

var file_messaging_service_message_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x69, 0x6e, 0x66, 0x6c, 0x75,
	0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x01, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x0b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f,
	0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x42, 0x4c, 0x45,
	0x4d, 0x10, 0x01, 0x22, 0xd7, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x47, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c,
	0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x64,
	0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xc8, 0x02,
	0x0a, 0x21, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x47, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69,
	0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4b, 0x65, 0x79,
	0x12, 0x49, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e,
	0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x64,
	0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xf4, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x6e,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x61, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x20, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x1a, 0x3f,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xad, 0x02, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x47, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x49, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69,
	0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x5e, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x4e, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e,
	0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22,
	0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61,
	0x6e, 0x65, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x99, 0x01, 0x0a,
	0x12, 0x53, 0x61, 0x76, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4c, 0x0a, 0x0c, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x61, 0x75, 0x74,
	0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x75, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22,
	0xb9, 0x02, 0x0a, 0x0d, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4b, 0x65,
	0x79, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x58, 0x0a, 0x10, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x6e,
	0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x52, 0x0f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x22, 0x78, 0x0a, 0x0f, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x54, 0x6f, 0x22, 0x64, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x66, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x5b, 0x0a, 0x0e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x49, 0x0a,
	0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x35, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x47, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c,
	0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x22, 0x8f, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6e, 0x66,
	0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4b, 0x65, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e,
	0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3c,
	0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e,
	0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x12, 0x0a, 0x03,
	0x73, 0x74, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72,
	0x12, 0x12, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x9e, 0x09, 0x0a,
	0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x70, 0x69, 0x12, 0x4d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e,
	0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x6b, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65,
	0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e,
	0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x7c, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x36, 0x2e, 0x69, 0x6e, 0x66, 0x6c,
	0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x8e,
	0x01, 0x0a, 0x1e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x12, 0x3f, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x6f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61,
	0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x6e, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x30, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e,
	0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a,
	0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x74, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a,
	0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c,
	0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x75, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x69, 0x6e,
	0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x74, 0x0a,
	0x11, 0x53, 0x61, 0x76, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x32, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65,
	0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e,
	0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x78, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x34, 0x2e, 0x69, 0x6e, 0x66,
	0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x45, 0x5a,
	0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x6c,
	0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messaging_service_message_service_proto_rawDescOnce sync.Once
	file_messaging_service_message_service_proto_rawDescData = file_messaging_service_message_service_proto_rawDesc
)

func file_messaging_service_message_service_proto_rawDescGZIP() []byte {
	file_messaging_service_message_service_proto_rawDescOnce.Do(func() {
		file_messaging_service_message_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_messaging_service_message_service_proto_rawDescData)
	})
	return file_messaging_service_message_service_proto_rawDescData
}

var file_messaging_service_message_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messaging_service_message_service_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_messaging_service_message_service_proto_goTypes = []interface{}{
	(ServiceStatus_StatusValue)(0),            // 0: influenzanet.message_service.ServiceStatus.StatusValue
	(*ServiceStatus)(nil),                     // 1: influenzanet.message_service.ServiceStatus
	(*SendMessageToAllUsersReq)(nil),          // 2: influenzanet.message_service.SendMessageToAllUsersReq
	(*SendMessageToStudyParticipantsReq)(nil), // 3: influenzanet.message_service.SendMessageToStudyParticipantsReq
	(*SendEmailReq)(nil),                      // 4: influenzanet.message_service.SendEmailReq
	(*AutoMessage)(nil),                       // 5: influenzanet.message_service.AutoMessage
	(*AutoMessages)(nil),                      // 6: influenzanet.message_service.AutoMessages
	(*GetAutoMessagesReq)(nil),                // 7: influenzanet.message_service.GetAutoMessagesReq
	(*SaveAutoMessageReq)(nil),                // 8: influenzanet.message_service.SaveAutoMessageReq
	(*DeleteAutoMessageReq)(nil),              // 9: influenzanet.message_service.DeleteAutoMessageReq
	(*EmailTemplate)(nil),                     // 10: influenzanet.message_service.EmailTemplate
	(*HeaderOverrides)(nil),                   // 11: influenzanet.message_service.HeaderOverrides
	(*LocalizedTemplate)(nil),                 // 12: influenzanet.message_service.LocalizedTemplate
	(*EmailTemplates)(nil),                    // 13: influenzanet.message_service.EmailTemplates
	(*GetEmailTemplatesReq)(nil),              // 14: influenzanet.message_service.GetEmailTemplatesReq
	(*SaveEmailTemplateReq)(nil),              // 15: influenzanet.message_service.SaveEmailTemplateReq
	(*DeleteEmailTemplateReq)(nil),            // 16: influenzanet.message_service.DeleteEmailTemplateReq
	(*Expression)(nil),                        // 17: influenzanet.message_service.Expression
	(*ExpressionArg)(nil),                     // 18: influenzanet.message_service.ExpressionArg
	nil,                                       // 19: influenzanet.message_service.SendEmailReq.ContentInfosEntry
	(*api_types.TokenInfos)(nil),              // 20: influenzanet.shared.TokenInfos
	(*emptypb.Empty)(nil),                     // 21: google.protobuf.Empty
}
var file_messaging_service_message_service_proto_depIdxs = []int32{
	0,  // 0: influenzanet.message_service.ServiceStatus.status:type_name -> influenzanet.message_service.ServiceStatus.StatusValue
	20, // 1: influenzanet.message_service.SendMessageToAllUsersReq.token:type_name -> influenzanet.shared.TokenInfos
	10, // 2: influenzanet.message_service.SendMessageToAllUsersReq.template:type_name -> influenzanet.message_service.EmailTemplate
	20, // 3: influenzanet.message_service.SendMessageToStudyParticipantsReq.token:type_name -> influenzanet.shared.TokenInfos
	10, // 4: influenzanet.message_service.SendMessageToStudyParticipantsReq.template:type_name -> influenzanet.message_service.EmailTemplate
	18, // 5: influenzanet.message_service.SendMessageToStudyParticipantsReq.condition:type_name -> influenzanet.message_service.ExpressionArg
	19, // 6: influenzanet.message_service.SendEmailReq.content_infos:type_name -> influenzanet.message_service.SendEmailReq.ContentInfosEntry
	10, // 7: influenzanet.message_service.AutoMessage.template:type_name -> influenzanet.message_service.EmailTemplate
	18, // 8: influenzanet.message_service.AutoMessage.condition:type_name -> influenzanet.message_service.ExpressionArg
	5,  // 9: influenzanet.message_service.AutoMessages.auto_messages:type_name -> influenzanet.message_service.AutoMessage
	20, // 10: influenzanet.message_service.GetAutoMessagesReq.token:type_name -> influenzanet.shared.TokenInfos
	20, // 11: influenzanet.message_service.SaveAutoMessageReq.token:type_name -> influenzanet.shared.TokenInfos
	5,  // 12: influenzanet.message_service.SaveAutoMessageReq.auto_message:type_name -> influenzanet.message_service.AutoMessage
	20, // 13: influenzanet.message_service.DeleteAutoMessageReq.token:type_name -> influenzanet.shared.TokenInfos
	12, // 14: influenzanet.message_service.EmailTemplate.translations:type_name -> influenzanet.message_service.LocalizedTemplate
	11, // 15: influenzanet.message_service.EmailTemplate.header_overrides:type_name -> influenzanet.message_service.HeaderOverrides
	10, // 16: influenzanet.message_service.EmailTemplates.templates:type_name -> influenzanet.message_service.EmailTemplate
	20, // 17: influenzanet.message_service.GetEmailTemplatesReq.token:type_name -> influenzanet.shared.TokenInfos
	20, // 18: influenzanet.message_service.SaveEmailTemplateReq.token:type_name -> influenzanet.shared.TokenInfos
	10, // 19: influenzanet.message_service.SaveEmailTemplateReq.template:type_name -> influenzanet.message_service.EmailTemplate
	20, // 20: influenzanet.message_service.DeleteEmailTemplateReq.token:type_name -> influenzanet.shared.TokenInfos
	18, // 21: influenzanet.message_service.Expression.data:type_name -> influenzanet.message_service.ExpressionArg
	17, // 22: influenzanet.message_service.ExpressionArg.exp:type_name -> influenzanet.message_service.Expression
	21, // 23: influenzanet.message_service.MessagingServiceApi.Status:input_type -> google.protobuf.Empty
	4,  // 24: influenzanet.message_service.MessagingServiceApi.SendInstantEmail:input_type -> influenzanet.message_service.SendEmailReq
	2,  // 25: influenzanet.message_service.MessagingServiceApi.SendMessageToAllUsers:input_type -> influenzanet.message_service.SendMessageToAllUsersReq
	3,  // 26: influenzanet.message_service.MessagingServiceApi.SendMessageToStudyParticipants:input_type -> influenzanet.message_service.SendMessageToStudyParticipantsReq
	7,  // 27: influenzanet.message_service.MessagingServiceApi.GetAutoMessages:input_type -> influenzanet.message_service.GetAutoMessagesReq
	8,  // 28: influenzanet.message_service.MessagingServiceApi.SaveAutoMessage:input_type -> influenzanet.message_service.SaveAutoMessageReq
	9,  // 29: influenzanet.message_service.MessagingServiceApi.DeleteAutoMessage:input_type -> influenzanet.message_service.DeleteAutoMessageReq
	14, // 30: influenzanet.message_service.MessagingServiceApi.GetEmailTemplates:input_type -> influenzanet.message_service.GetEmailTemplatesReq
	15, // 31: influenzanet.message_service.MessagingServiceApi.SaveEmailTemplate:input_type -> influenzanet.message_service.SaveEmailTemplateReq
	16, // 32: influenzanet.message_service.MessagingServiceApi.DeleteEmailTemplate:input_type -> influenzanet.message_service.DeleteEmailTemplateReq
	1,  // 33: influenzanet.message_service.MessagingServiceApi.Status:output_type -> influenzanet.message_service.ServiceStatus
	1,  // 34: influenzanet.message_service.MessagingServiceApi.SendInstantEmail:output_type -> influenzanet.message_service.ServiceStatus
	1,  // 35: influenzanet.message_service.MessagingServiceApi.SendMessageToAllUsers:output_type -> influenzanet.message_service.ServiceStatus
	1,  // 36: influenzanet.message_service.MessagingServiceApi.SendMessageToStudyParticipants:output_type -> influenzanet.message_service.ServiceStatus
	6,  // 37: influenzanet.message_service.MessagingServiceApi.GetAutoMessages:output_type -> influenzanet.message_service.AutoMessages
	5,  // 38: influenzanet.message_service.MessagingServiceApi.SaveAutoMessage:output_type -> influenzanet.message_service.AutoMessage
	1,  // 39: influenzanet.message_service.MessagingServiceApi.DeleteAutoMessage:output_type -> influenzanet.message_service.ServiceStatus
	13, // 40: influenzanet.message_service.MessagingServiceApi.GetEmailTemplates:output_type -> influenzanet.message_service.EmailTemplates
	10, // 41: influenzanet.message_service.MessagingServiceApi.SaveEmailTemplate:output_type -> influenzanet.message_service.EmailTemplate
	1,  // 42: influenzanet.message_service.MessagingServiceApi.DeleteEmailTemplate:output_type -> influenzanet.message_service.ServiceStatus
	33, // [33:43] is the sub-list for method output_type
	23, // [23:33] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_messaging_service_message_service_proto_init() }
func file_messaging_service_message_service_proto_init() {
	if File_messaging_service_message_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messaging_service_message_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageToAllUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageToStudyParticipantsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEmailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAutoMessagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAutoMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAutoMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeaderOverrides); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalizedTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTemplates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmailTemplatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveEmailTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmailTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messaging_service_message_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressionArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messaging_service_message_service_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*ExpressionArg_Exp)(nil),
		(*ExpressionArg_Str)(nil),
		(*ExpressionArg_Num)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messaging_service_message_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_messaging_service_message_service_proto_goTypes,
		DependencyIndexes: file_messaging_service_message_service_proto_depIdxs,
		EnumInfos:         file_messaging_service_message_service_proto_enumTypes,
		MessageInfos:      file_messaging_service_message_service_proto_msgTypes,
	}.Build()
	File_messaging_service_message_service_proto = out.File
	file_messaging_service_message_service_proto_rawDesc = nil
	file_messaging_service_message_service_proto_goTypes = nil
	file_messaging_service_message_service_proto_depIdxs = nil
}
